definitions:
  entities.Movie:
    properties:
      Genre:
        example:
        - Action
        - ' Adventure'
        - ' Drama'
        items:
          type: string
        type: array
      ImdbID:
        example: tt2884018
        type: string
      Rated:
        example: 8.4
        type: number
      Title:
        example: Avengers:Endgame
        type: string
      Year:
        example: 2019
        type: integer
    type: object
  utils.HTTPError:
    properties:
      message:
        example: status bad request
        type: string
    type: object
info:
  contact: {}
  license: {}
paths:
  /hello:
    get:
      description: Say hello to user
      responses:
        "200":
          description: OK
          schema:
            type: string
        "404": {}
      summary: Say hello to user
  /movies:
    get:
      description: Get all Movies
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/entities.Movie'
            type: array
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/utils.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.HTTPError'
      summary: Get all movies
  /movies/Genre/{Genre}:
    get:
      description: Fetch movies by Genre
      parameters:
      - description: Movie Genre
        in: path
        name: Genre
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entities.Movie'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/utils.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.HTTPError'
      summary: Fetch movies by Genre
  /movies/Id/{Id}:
    get:
      description: Fetch movie by ID
      parameters:
      - description: Movie Id
        in: path
        name: Id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entities.Movie'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/utils.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.HTTPError'
      summary: Fetch movie by ID
  /movies/Title/{Title}:
    get:
      description: Fetch movie by ID
      parameters:
      - description: Movie Title
        in: path
        name: Title
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entities.Movie'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/utils.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.HTTPError'
      summary: Fetch movie by ID
  /movies/Year/{Year}:
    get:
      description: Fetch movies by year
      parameters:
      - description: Movie Year
        in: path
        name: Year
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entities.Movie'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/utils.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.HTTPError'
      summary: Fetch movies by year
  /movies/Year/start/{start}/end/{end}:
    get:
      description: Fetch movies by year
      parameters:
      - description: start year
        in: path
        name: start
        required: true
        type: integer
      - description: end year
        in: path
        name: end
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entities.Movie'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/utils.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.HTTPError'
      summary: Fetch movies by year
  /movies/maxRating/{maxRating}:
    get:
      description: Get all Movies with max rating r
      parameters:
      - description: Movie rating
        in: path
        name: maxRating
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/entities.Movie'
            type: array
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/utils.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.HTTPError'
      summary: Get all movie with max rating r
  /movies/minRating/{minRating}:
    get:
      consumes:
      - application/json
      description: Get all Movies with min rating r
      parameters:
      - description: Movie rating
        in: path
        name: minRating
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/entities.Movie'
            type: array
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/utils.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.HTTPError'
      summary: Get all movie with min rating r
swagger: "2.0"
